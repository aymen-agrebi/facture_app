datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  category  Category[]
  company   Company[]
  createdAt DateTime   @default(now())
  factures  Facture[]
  firstName String?
  id        String     @id @default(cuid())
  lastName  String?
  password  String
  product   Product[]
  roles     Json
  updatedAt DateTime   @updatedAt
  username  String     @unique
}

model Facture {
  companies   Company?  @relation(fields: [companiesId], references: [id])
  companiesId String?
  createdAt   DateTime  @default(now())
  discount    Float?
  id          String    @id @default(cuid())
  product     Product[]
  quantity    Int?
  totalPrice  Int?
  tva         String?
  updatedAt   DateTime  @updatedAt
  users       User?     @relation(fields: [usersId], references: [id])
  usersId     String?
}

model Customer {
  address   Address? @relation(fields: [addressId], references: [id])
  addressId String?
  createdAt DateTime @default(now())
  email     String?
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  phone     String?
  updatedAt DateTime @updatedAt
}

model Address {
  address_1 String?
  address_2 String?
  city      String?
  companies Company[]
  createdAt DateTime   @default(now())
  customers Customer[]
  id        String     @id @default(cuid())
  state     String?
  updatedAt DateTime   @updatedAt
  zip       Int?
}

model Product {
  categories  Category[]
  createdAt   DateTime   @default(now())
  description String?
  id          String     @id @default(cuid())
  itemPrice   Float?
  name        String?
  orders      Facture[]
  updatedAt   DateTime   @updatedAt
  users       User[]
}

model Category {
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  name      String?
  product   Product[]
  updatedAt DateTime  @updatedAt
  users     User[]
}

model Company {
  address       Address?  @relation(fields: [addressId], references: [id])
  addressId     String?
  createdAt     DateTime  @default(now())
  facture       Facture[]
  id            String    @id @default(cuid())
  logo          String?
  name          String?
  raisonSociale String?
  rib           String?
  stamp         String?
  updatedAt     DateTime  @updatedAt
  users         User?     @relation(fields: [usersId], references: [id])
  usersId       String?
}
